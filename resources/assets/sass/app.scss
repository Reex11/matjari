
// Fonts
@import url("https://fonts.googleapis.com/css?family=Raleway:300,400,600");
@import url('https://fonts.googleapis.com/css?family=Nunito');
@import url('https://fonts.googleapis.com/css?family=Tajawal:300,400,700,900&subset=arabic');

// Variables
@import "variables";

// Bootstrap
@import '~bootstrap/scss/bootstrap';
@import '~bootstrap-vue/src/index.scss';
//@import '~bootstrap-4.2.1-rtl/scss/bootstrap';


.navbar-laravel {
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
}

html, body {
    direction: rtl;
    background-color: #fff;
    color: #636b6f;
    font-family: 'Tajawal', sans-serif;
    font-weight: 500;
    text-align:right;
    margin: 0;
}

.matjari-nav {
    /* padding: 1.5vw; */
    border-bottom: 2px solid #77dd99;

    /* display:block; */
}

.navbar-nav {
    padding-right: 0;
}

.nav-links > a {
    color: #77dd99;
    padding: 0 25px;
    font-size: 18px;
    font-weight: 600;
    text-decoration: none;
    text-transform: uppercase;
}

.matjari-nav .nav-link {
    font-weight: 600;
}

.navbar-expand-lg .navbar-nav .nav-link {
    padding-right: 1.5rem;
    padding-left: 0.5rem;
}


.navbar-light .navbar-nav .nav-link {
    color: #77dd99;
}

.flex-center {
    align-items: center;
    display: flex;
    justify-content: center;
}
.content {
    padding: 30px;
}

.title {
    font-size: 84px;
}

.links > a {
    color: #636b6f;
    padding: 0 25px;
    font-size: 20px;
    font-weight: 600;
    text-decoration: none;
    text-transform: uppercase;
}

.dev {
  color: $purple;
}

a.dropdown-item:hover {
    background-color: $gray-200;
}

a.dropdown-item:active {
    background-color: $blue;
}

.week-table th, .week-table td {
    // padding: 1rem;
}

table.week-table {
    border: solid 3px #454d55 !important;
}

.week-day {
    font-size: 25px;
    font-weight: bold;
}

td.table-pos-1 {
    border-right: solid 3px #454d55;
}

td.thick-border-left , th.thick-border-left {
    border-left: solid 3px #454d55;
}


.thick-border {
    border: solid 3px #454d55;
}

.bootstrap-datetimepicker-widget {
  margin-left:auto;
  margin-right:auto;
}

.bootstrap-datetimepicker-widget .list-unstyled {
  padding:0;  
}



// ---- RTL FIXES

.navbar-brand {
    margin-right: 1rem;
    margin-left: auto;
}

.dropdown-menu {
  text-align:right;
}

.form-check-inline {
    margin-right: 0.75rem;
}

.form-check-inline .form-check-input {
    margin-left: 0.3125rem;
    margin-right: 0;
}

.alert-dismissible .close {
  left: 0;
  right: auto;
}

.alert-dismissible {
    padding-left: 4rem;
    padding-right: inherit;
}


// Horizontal
//
// Change the layout of list group items from vertical (default) to horizontal.

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .list-group-horizontal#{$infix} {
      flex-direction: row;

      .list-group-item {
        margin-left: -$list-group-border-width;
        margin-bottom: 0;

        &:first-child {
          @include border-right-radius($list-group-border-radius);
          @include border-top-left-radius(0);
        }

        &:last-child {
          margin-left: 0;
          @include border-left-radius($list-group-border-radius);
          @include border-bottom-right-radius(0);
        }
      }
    }
  }
}


// Switches for Bootstrap 4.

//
// IMPORTANT: These Sass variables are defined in Bootstrap's variables.scss. You should import that file first, then remove these.
//


//
// These variables can be used to customize the switch component.
//
$switch-height: calc(#{$input-height} * .8) !default;
$switch-height-sm: calc(#{$input-height-sm} * .8) !default;
$switch-height-lg: calc(#{$input-height-lg} * .8) !default;
$switch-border-radius: $switch-height !default;
$switch-bg: $input-disabled-bg !default;
$switch-checked-bg: map-get($theme-colors, 'primary') !default;
$switch-disabled-bg: $custom-control-indicator-disabled-bg !default;
$switch-disabled-color: $custom-control-label-disabled-color !default;
$switch-thumb-bg: $white !default;
$switch-thumb-border-radius: 50% !default;
$switch-thumb-padding: 2px !default;
$switch-focus-box-shadow: 0 0 0 $input-btn-focus-width rgba(map-get($theme-colors, 'primary'), .25);
$switch-transition: .2s all !default;

.switch {
  font-size: $font-size-base;
  position: relative;

  input {
    position: absolute;
    height: 1px;
    width: 1px;
    background: none;
    border: 0;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    overflow: hidden;
    padding: 0;

    + label {
      position: relative;
      min-width: calc(#{$switch-height} * 2);
      border-radius: $switch-border-radius;
      height: $switch-height;
      line-height: $switch-height;
      display: inline-block;
      cursor: pointer;
      outline: none;
      user-select: none;
      vertical-align: middle;
      text-indent: calc(calc(#{$switch-height} * 2) + .5rem);
    }

    + label::before,
    + label::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: calc(#{$switch-height} * 2);
      bottom: 0;
      display: block;
    }

    + label::before {
      left: 0;
      background-color: $switch-bg;
      border-radius: $switch-border-radius;
      transition: $switch-transition;
    }

    + label::after {
      top: $switch-thumb-padding;
      right: $switch-thumb-padding;
      width: calc(#{$switch-height} - calc(#{$switch-thumb-padding} * 2));
      height: calc(#{$switch-height} - calc(#{$switch-thumb-padding} * 2));
      border-radius: $switch-thumb-border-radius;
      background-color: $switch-thumb-bg;
      transition: $switch-transition;
    }

    &:checked + label::before {
      background-color: $switch-checked-bg;
    }

    &:checked + label::after {
      margin-right: $switch-height;
    }

    &:focus + label::before {
      outline: none;
      box-shadow: $switch-focus-box-shadow;
    }

    &:disabled + label {
      color: $switch-disabled-color;
      cursor: not-allowed;
    }

    &:disabled + label::before {
      background-color: $switch-disabled-bg;
    }
  }

  // Small variation
  &.switch-sm {
    font-size: $font-size-sm;

    input {
      + label {
        min-width: calc(#{$switch-height-sm} * 2);
        height: $switch-height-sm;
        line-height: $switch-height-sm;
        text-indent: calc(calc(#{$switch-height-sm} * 2) + .5rem);
      }

      + label::before {
        width: calc(#{$switch-height-sm} * 2);
      }

      + label::after {
        width: calc(#{$switch-height-sm} - calc(#{$switch-thumb-padding} * 2));
        height: calc(#{$switch-height-sm} - calc(#{$switch-thumb-padding} * 2));
      }

      &:checked + label::after {
        margin-right: $switch-height-sm;
      }
    }
  }

  // Large variation
  &.switch-lg {
    font-size: $font-size-lg;

    input {
      + label {
        min-width: calc(#{$switch-height-lg} * 2);
        height: $switch-height-lg;
        line-height: $switch-height-lg;
        text-indent: calc(calc(#{$switch-height-lg} * 2) + .5rem);
      }

      + label::before {
        width: calc(#{$switch-height-lg} * 2);
      }

      + label::after {
        width: calc(#{$switch-height-lg} - calc(#{$switch-thumb-padding} * 2));
        height: calc(#{$switch-height-lg} - calc(#{$switch-thumb-padding} * 2));
      }

      &:checked + label::after {
        margin-right: $switch-height-lg;
      }
    }
  }

  + .switch {
    margin-right: 1rem;
  }
}
